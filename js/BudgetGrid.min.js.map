{"version":3,"file":"BudgetGrid.min.js","sources":["../../src/js/BudgetGrid.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\nlet grid;\nconst maxRecords = 300;\n\nfunction CustomPinnedRowRenderer() {}\n\nCustomPinnedRowRenderer.prototype.init = function (params) {\n\tthis.eGui = document.createElement('div');\n\tif (params.class) {\n\t\tthis.eGui.className += ' ' + params.class;\n\t}\n\tthis.eGui.innerHTML = params.value;\n};\n\nCustomPinnedRowRenderer.prototype.getGui = function () {\n\treturn this.eGui;\n};\n\nconst columnDefs = [\n\t{\n\t\theaderName: 'Producer group',\n\t\tfield: 'producerGroup',\n\t\thide: true,\n\t\trowGroup: true\n\t},\n\t{\n\t\theaderName: 'Producer',\n\t\tfield: 'producer',\n\t\thide: true,\n\t\trowGroup: true\n\t},\n\t{\n\t\theaderName: 'Dpt.',\n\t\tfield: 'department'\n\t},\n\t{\n\t\theaderName: 'SA',\n\t\tfield: 'sa'\n\t},\n\t{\n\t\theaderName: 'BL',\n\t\tfield: 'bl'\n\t},\n\t{\n\t\theaderName: 'Jan.',\n\t\tfield: 'january',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Feb.',\n\t\tfield: 'february',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Mar.',\n\t\tfield: 'march',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Apr.',\n\t\tfield: 'april',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'May',\n\t\tfield: 'may',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Jun.',\n\t\tfield: 'june',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Jul.',\n\t\tfield: 'july',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Aug.',\n\t\tfield: 'august',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Sept.',\n\t\tfield: 'september',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Oct.',\n\t\tfield: 'october',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Nov.',\n\t\tfield: 'november',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Dec.',\n\t\tfield: 'december',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Total 2021',\n\t\tvalueGetter: params => {\n\t\t\tconsole.log(params);\n\t\t\treturn (\n\t\t\t\tparams.data.january +\n\t\t\t\tparams.data.february +\n\t\t\t\tparams.data.march +\n\t\t\t\tparams.data.april +\n\t\t\t\tparams.data.may +\n\t\t\t\tparams.data.june +\n\t\t\t\tparams.data.july +\n\t\t\t\tparams.data.august +\n\t\t\t\tparams.data.september +\n\t\t\t\tparams.data.october +\n\t\t\t\tparams.data.november +\n\t\t\t\tparams.data.december\n\t\t\t);\n\t\t},\n\t\tpinned: 'right',\n\t\taggFunc: 'sum',\n\t\tcellRendererSelector: function (params) {\n\t\t\tif (params.node.rowPinned) {\n\t\t\t\treturn {\n\t\t\t\t\tcomponent: CustomPinnedRowRenderer,\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tclass: 'merda'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\theaderName: 'Budget 2021',\n\t\tfield: 'budget',\n\t\tpinned: 'right',\n\t\taggFunc: 'sum'\n\t},\n\t{\n\t\theaderName: 'Ecart 2021',\n\t\tvalueGetter: params => {\n\t\t\treturn (\n\t\t\t\tparams.data.january +\n\t\t\t\tparams.data.february +\n\t\t\t\tparams.data.march +\n\t\t\t\tparams.data.april +\n\t\t\t\tparams.data.may +\n\t\t\t\tparams.data.june +\n\t\t\t\tparams.data.july +\n\t\t\t\tparams.data.august +\n\t\t\t\tparams.data.september +\n\t\t\t\tparams.data.october +\n\t\t\t\tparams.data.november +\n\t\t\t\tparams.data.december -\n\t\t\t\tparams.data.budget\n\t\t\t);\n\t\t},\n\t\tvalueFormatter: params => {\n\t\t\tif (!isNaN(params.value)) {\n\t\t\t\treturn params.value > 0 ? '+' + params.value : params.value;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\tpinned: 'right',\n\t\taggFunc: 'sum'\n\t}\n];\n\nfunction randomIntFromInterval(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst defaultColumnDef = {\n\tfilter: true,\n\tsortable: true,\n\tresizable: true,\n\tsuppressMenu: true\n};\n\nconst rowData = [];\n\nlet group = 1;\nlet prod = 1;\nlet groupIdent;\nlet prodIdent;\nlet jan;\nlet feb;\nlet mar;\nlet apr;\nlet may;\nlet jun;\nlet jul;\nlet aug;\nlet sept;\nlet oct;\nlet nov;\nlet dec;\nlet dep = randomIntFromInterval(15, 150);\nlet sa;\nlet bl;\nlet budget;\nfor (let i = 1; i < maxRecords + 1; i++) {\n\tgroupIdent = randomIntFromInterval(9, 18);\n\tprodIdent = randomIntFromInterval(3, 9);\n\tjan = randomIntFromInterval(15, 150);\n\tfeb = randomIntFromInterval(15, 150);\n\tmar = randomIntFromInterval(15, 150);\n\tapr = randomIntFromInterval(15, 150);\n\tmay = randomIntFromInterval(15, 150);\n\tjun = randomIntFromInterval(15, 150);\n\tjul = randomIntFromInterval(15, 150);\n\taug = randomIntFromInterval(15, 150);\n\tsept = randomIntFromInterval(15, 150);\n\toct = randomIntFromInterval(15, 150);\n\tnov = randomIntFromInterval(15, 150);\n\tdec = randomIntFromInterval(15, 150);\n\tbudget = randomIntFromInterval(15, 150) * 12;\n\tdep = i % prodIdent == 0 ? randomIntFromInterval(15, 150) : dep;\n\tsa = randomIntFromInterval(15, 150);\n\tbl = randomIntFromInterval(15, 150);\n\tgroup = i % groupIdent == 0 ? group + 1 : group;\n\tprod = i % prodIdent == 0 ? prod + 1 : prod;\n\trowData.push({\n\t\tproducerGroup: 'Group ' + group,\n\t\tproducer: 'producer ' + prod,\n\t\twasteFamily: 'waste family ' + i,\n\t\tjanuary: jan,\n\t\tfebruary: feb,\n\t\tmarch: mar,\n\t\tapril: apr,\n\t\tmay: may,\n\t\tjune: jun,\n\t\tjuly: jul,\n\t\taugust: aug,\n\t\tseptember: sept,\n\t\toctober: oct,\n\t\tnovember: nov,\n\t\tdecember: dec,\n\t\tbudget: budget,\n\t\tdepartment: 'DEP' + dep,\n\t\tsa: 'SA' + sa,\n\t\tbl: 'BL' + bl\n\t});\n}\n\nconst gridOptions = {\n\tcolumnDefs: columnDefs,\n\tdefaultColDef: defaultColumnDef,\n\trowData: rowData,\n\t// domLayout: 'autoHeight',\n\trowSelection: 'multiple',\n\theaderHeight: 46,\n\trowHeight: 64,\n\tsuppressRowClickSelection: true,\n\tonCellValueChanged: function (event) {\n\t\tconsole.log(event);\n\t},\n\tsideBar: {\n\t\ttoolPanels: [\n\t\t\t{\n\t\t\t\tid: 'filters',\n\t\t\t\tlabelDefault: 'Filters',\n\t\t\t\tlabelKey: 'filters',\n\t\t\t\ticonKey: 'filter',\n\t\t\t\ttoolPanel: 'agFiltersToolPanel'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'columns',\n\t\t\t\tlabelDefault: 'Columns',\n\t\t\t\tlabelKey: 'columns',\n\t\t\t\ticonKey: 'columns',\n\t\t\t\ttoolPanel: 'agColumnsToolPanel'\n\t\t\t}\n\t\t],\n\t\tdefaultToolPanel: undefined\n\t},\n\tautoGroupColumnDef: {\n\t\tfield: 'wasteFamily',\n\t\tcellRendererParams: {\n\t\t\tsuppressCount: true\n\t\t},\n\t\tpinned: 'left',\n\t\tminWidth: 300\n\t},\n\tenableRangeSelection: true,\n\tstatusBar: {\n\t\tstatusPanels: [\n\t\t\t{\n\t\t\t\tstatusPanel: 'agTotalAndFilteredRowCountComponent',\n\t\t\t\tkey: 'totalAndFilter',\n\t\t\t\talign: 'left'\n\t\t\t},\n\t\t\t{ statusPanel: 'agSelectedRowCountComponent', align: 'left' },\n\t\t\t{ statusPanel: 'agAggregationComponent', align: 'right' }\n\t\t]\n\t},\n\tpinnedTopRowData: [\n\t\t{\n\t\t\tproducerGroup: 'Nombre de jours ouvrés',\n\t\t\twasteFamily: 'Nombre de jours ouvrés',\n\t\t\tjanuary: 22,\n\t\t\tfebruary: 22,\n\t\t\tmarch: 21,\n\t\t\tapril: 21,\n\t\t\tmay: 22,\n\t\t\tjune: 22,\n\t\t\tjuly: 20,\n\t\t\taugust: 21,\n\t\t\tseptember: 21,\n\t\t\toctober: 21,\n\t\t\tnovember: 22,\n\t\t\tdecember: 22\n\t\t}\n\t]\n};\n\nfunction autoSizeAll(grid, skipHeader) {\n\tvar allColumnIds = [];\n\tgrid.gridOptions.columnApi.getAllColumns().forEach(function (column) {\n\t\tallColumnIds.push(column.colId);\n\t});\n\n\tgrid.gridOptions.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst gridDiv = document.querySelector('#myGrid');\n\tgrid = new agGrid.Grid(gridDiv, gridOptions);\n\tautoSizeAll(grid, true);\n\t// gridOptions.api.sizeColumnsToFit();\n\twindow.grid = grid;\n});\n"],"names":["grid","CustomPinnedRowRenderer","prototype","init","params","this","eGui","document","createElement","class","className","innerHTML","value","getGui","columnDefs","headerName","field","hide","rowGroup","aggFunc","valueGetter","console","log","data","january","february","march","april","may","june","july","august","september","october","november","december","pinned","cellRendererSelector","node","rowPinned","component","budget","valueFormatter","isNaN","randomIntFromInterval","min","max","Math","floor","random","groupIdent","prodIdent","jan","feb","mar","apr","jun","jul","aug","sept","oct","nov","dec","sa","bl","rowData","group","prod","dep","i","maxRecords","push","producerGroup","producer","wasteFamily","department","gridOptions","defaultColDef","filter","sortable","resizable","suppressMenu","rowSelection","headerHeight","rowHeight","suppressRowClickSelection","onCellValueChanged","event","sideBar","toolPanels","id","labelDefault","labelKey","iconKey","toolPanel","defaultToolPanel","autoGroupColumnDef","cellRendererParams","suppressCount","minWidth","enableRangeSelection","statusBar","statusPanels","statusPanel","key","align","pinnedTopRowData","addEventListener","skipHeader","allColumnIds","gridDiv","querySelector","agGrid","Grid","columnApi","getAllColumns","forEach","column","colId","autoSizeColumns","window"],"mappings":"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"}